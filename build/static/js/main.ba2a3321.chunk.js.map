{"version":3,"sources":["context/contextReducer.js","context/context.js","components/Details/styles.js","constants/categories.js","useTransactions.js","components/Details/Details.jsx","components/Main/styles.js","components/Snackbar/styles.js","components/Snackbar/Snackbar.jsx","utils/formatDate.js","components/Main/Form/styles.js","components/Main/Form/Form.jsx","components/Main/List/styles.js","components/Main/List/List.jsx","components/InfoCard.jsx","components/Main/Main.jsx","styles.js","App.js","index.js"],"names":["contextReducer","state","action","transactions","type","filter","transaction","id","payload","localStorage","setItem","JSON","stringify","removeItem","console","log","window","location","reload","initialState","parse","getItem","amount","category","date","ExpenseTrackerContext","createContext","Provider","children","useReducer","dispatch","balance","reduce","acc","currVal","value","deleteTransaction","addTransaction","deleteAllTransaction","makeStyles","income","borderBottom","expense","incomeColors","expenseColors","incomeCategories","color","expenseCategories","incomeCategorieslocalData","expenseCategorieslocalData","useTransactions","title","useEffect","forEach","c","rightTransactions","useContext","t","total","categories","find","filteredCategories","sc","chartData","datasets","data","map","backgroundColor","labels","DetailsCard","subheader","classes","useStyles","dataInfo","i","length","push","dataFun","Card","className","CardHeader","CardContent","Typography","variant","d","key","index","style","fontSize","lineHeight","padding","theme","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","cartContent","divider","margin","root","width","marginTop","spacing","CustomizedSnackbar","open","setOpen","handleClose","event","reason","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","severity","elevation","Date","month","getMonth","day","getDate","year","getFullYear","join","radioGroup","display","justifyContent","marginBottom","button","buttonAdd","formatDate","NewTransactionForm","useState","formData","setFormData","addCatName","setAddCatName","segment","useSpeechContext","React","createTransaction","Number","isNaN","includes","iC","uuidv4","intent","isFinal","entities","s","charAt","slice","toLowerCase","selectedCategories","Grid","container","item","xs","align","gutterBottom","words","w","FormControl","fullWidth","InputLabel","Select","onChange","e","target","MenuItem","TextField","label","Button","onClick","Math","floor","random","avatarIncome","green","avatarExpense","palette","getContrastText","red","list","maxHeight","overflow","List","dense","Slide","direction","in","mountOnEnter","unmountOnExit","ListItem","ListItemAvatar","Avatar","MoneyOff","ListItemText","primary","secondary","ListItemSecondaryAction","IconButton","edge","Delete","border","InfoCard","round","textAlign","ExpenseTracker","Divider","Form","desktop","breakpoints","up","mobile","down","main","paddingBottom","last","grid","reff","createRef","App","speechState","useRef","win","doc","document","docElem","documentElement","getElementsByTagName","clientWidth","innerHeight","options","orientation","unit","format","body","scrollWidth","scrollHeight","SpeechState","Recording","current","scrollIntoView","background","ref","alignItems","sm","Details","Main","targetRef","filename","x","y","scale","toPdf","ReactDOM","render","appId","language","getElementById"],"mappings":"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","file":"static/js/main.ba2a3321.chunk.js","sourcesContent":["const contextReducer = (state, action) => {\r\n  let transactions;\r\n\r\n  switch (action.type) {\r\n    case 'DELETE_TRANSACTION':\r\n      transactions = state.filter((transaction) => transaction.id !== action.payload);\r\n\r\n      localStorage.setItem('transactions', JSON.stringify(transactions));\r\n\r\n      return transactions;\r\n      case 'DELETE_ALL_TRANSACTION':\r\n      // transactions = state.filter((transaction) => transaction == action.payload);\r\n\r\n      // localStorage.setItem('transactions', JSON.stringify(null));\r\n      //localStorage.clear();\r\n      localStorage.removeItem(\"transactions\");\r\n      console.log(\"clear called\")\r\n      window.location.reload(true);\r\n      return state;\r\n    case 'ADD_TRANSACTION':\r\n      transactions = [action.payload, ...state];\r\n\r\n      localStorage.setItem('transactions', JSON.stringify(transactions));\r\n\r\n      return transactions;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default contextReducer;","import React, { useReducer, createContext } from 'react';\r\n\r\nimport contextReducer from './contextReducer';\r\n\r\n// const initialState = JSON.parse(localStorage.getItem('transactions')) || [{ amount: 500, category: 'Salary', type: 'Income', date: '2020-11-16', id: '44c68123-5b86-4cc8-b915-bb9e16cebe6a' }, { amount: 225, category: 'Investments', type: 'Income', date: '2020-11-16', id: '33b295b8-a8cb-49f0-8f0d-bb268686de1a' }, { amount: 50, category: 'Salary', type: 'Income', date: '2020-11-13', id: '270304a8-b11d-4e16-9341-33df641ede64' }, { amount: 123, category: 'Car', type: 'Expense', date: '2020-11-16', id: '0f72e66e-e144-4a72-bbc1-c3c92018635e' }, { amount: 50, category: 'Pets', type: 'Expense', date: '2020-11-13', id: 'c5647dde-d857-463d-8b4e-1c866cc5f83e' }];\r\nconst initialState = JSON.parse(localStorage.getItem('transactions')) || [{ amount: 0, category: 'Demo', type: 'Income', date: '2021-10-16', id: '44c68123-5b86-4cc8-b915-bb9e16cebe6a' }, { amount: 0, category: 'Demo', type: 'Expense', date: '2021-10-16', id: '0f72e66e-e144-4a72-bbc1-c3c92018635e' }];\r\n\r\nexport const ExpenseTrackerContext = createContext(initialState);\r\n\r\nexport const Provider = ({ children }) => {\r\n  const [transactions, dispatch] = useReducer(contextReducer, initialState);\r\n\r\n  const deleteTransaction = (id) => {\r\n    dispatch({ type: 'DELETE_TRANSACTION', payload: id });\r\n  };\r\n\r\n  const deleteAllTransaction = () => {\r\n    dispatch({ type: 'DELETE_ALL_TRANSACTION'});\r\n    console.log(\"clear called\")\r\n  };\r\n\r\n  const addTransaction = (transaction) => {\r\n    dispatch({ type: 'ADD_TRANSACTION', payload: transaction });\r\n  };\r\n\r\n  const balance = transactions.reduce((acc, currVal) => (currVal.type === 'Expense' ? acc - currVal.amount : acc + currVal.amount), 0);\r\n\r\n  return (\r\n    <ExpenseTrackerContext.Provider value={{\r\n      transactions,\r\n      balance,\r\n      deleteTransaction,\r\n      addTransaction,\r\n      deleteAllTransaction,\r\n    }}\r\n    >\r\n      {children}\r\n    </ExpenseTrackerContext.Provider>\r\n  );\r\n};\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles(() => ({\r\n  income: {\r\n    borderBottom: '10px solid rgba(0, 255, 0, 0.5)',\r\n  },\r\n  expense: {\r\n    borderBottom: '10px solid rgba(255, 0, 0, 0.5)',\r\n  },\r\n}));\r\n","const incomeColors = ['#123123', '#154731', '#165f40', '#16784f', '#14915f', '#10ac6e', '#0bc77e', '#04e38d', '#00ff9d'];\r\nconst expenseColors = ['#b50d12', '#bf2f1f', '#c9452c', '#d3583a', '#dc6a48', '#e57c58', '#ee8d68', '#f79d79', '#ffae8a', '#cc474b', '#f55b5f'];\r\n\r\nexport const incomeCategories = [\r\n  { type: 'Business', amount: 0, color: incomeColors[0] },\r\n  { type: 'Investments', amount: 0, color: incomeColors[1] },\r\n  { type: 'Extra income', amount: 0, color: incomeColors[2] },\r\n  { type: 'Deposits', amount: 0, color: incomeColors[3] },\r\n  { type: 'Lottery', amount: 0, color: incomeColors[4] },\r\n  { type: 'Gifts', amount: 0, color: incomeColors[5] },\r\n  { type: 'Salary', amount: 0, color: incomeColors[6] },\r\n  { type: 'Savings', amount: 0, color: incomeColors[7] },\r\n  { type: 'Rental income', amount: 0, color: incomeColors[8] },\r\n  { type: 'Rental income 2', amount: 0, color: incomeColors[8] },\r\n  { type: 'Rental income 3', amount: 0, color: incomeColors[8] },\r\n  { type: 'Rental income 4', amount: 0, color: incomeColors[8] },\r\n  { type: 'Rental income 5', amount: 0, color: incomeColors[8] },\r\n];\r\n\r\nexport const expenseCategories = [\r\n  { type: 'Bills', amount: 0, color: expenseColors[0] },\r\n  { type: 'Car', amount: 0, color: expenseColors[1] },\r\n  { type: 'Clothes', amount: 0, color: expenseColors[2] },\r\n  { type: 'Travel', amount: 0, color: expenseColors[3] },\r\n  { type: 'Food', amount: 0, color: expenseColors[4] },\r\n  { type: 'Shopping', amount: 0, color: expenseColors[5] },\r\n  { type: 'House', amount: 0, color: expenseColors[6] },\r\n  { type: 'Entertainment', amount: 0, color: expenseColors[7] },\r\n  { type: 'Phone', amount: 0, color: expenseColors[8] },\r\n  { type: 'Pets', amount: 0, color: expenseColors[9] },\r\n  { type: 'Other', amount: 0, color: expenseColors[10] },\r\n];\r\n\r\n\r\nexport const resetCategories = () => {\r\n  incomeCategories.forEach((c) => c.amount = 0);\r\n  expenseCategories.forEach((c) => c.amount = 0);\r\n};\r\n","import { useContext,useEffect } from 'react';\r\nimport { ExpenseTrackerContext } from './context/context';\r\n\r\nimport { incomeCategories, expenseCategories, resetCategories } from './constants/categories';\r\nlet incomeCategorieslocalData =  JSON.parse(window.localStorage.getItem('incomeCategorieslocal')) === null ? incomeCategories : JSON.parse(window.localStorage.getItem('incomeCategorieslocal'));\r\n// const incomeCategorieslocalData =  JSON.parse(window.localStorage.getItem('incomeCategorieslocal')) === null ? incomeCategories : JSON.parse(window.localStorage.getItem('incomeCategorieslocal'));\r\nlet expenseCategorieslocalData =  JSON.parse(window.localStorage.getItem('expenseCategorieslocal')) === null ? expenseCategories : JSON.parse(window.localStorage.getItem('expenseCategorieslocal'));\r\n\r\nconst useTransactions = (title) => {\r\n\r\n  useEffect(() => {\r\n    incomeCategorieslocalData =  JSON.parse(window.localStorage.getItem('incomeCategorieslocal')) === null ? incomeCategories : JSON.parse(window.localStorage.getItem('incomeCategorieslocal'));\r\n   // const incomeCategorieslocalData =  JSON.parse(window.localStorage.getItem('incomeCategorieslocal')) === null ? incomeCategories : JSON.parse(window.localStorage.getItem('incomeCategorieslocal'));\r\n    expenseCategorieslocalData =  JSON.parse(window.localStorage.getItem('expenseCategorieslocal')) === null ? expenseCategories : JSON.parse(window.localStorage.getItem('expenseCategorieslocal'));\r\n  },[incomeCategorieslocalData,expenseCategorieslocalData])\r\n\r\n  resetCategories();\r\n  const { transactions } = useContext(ExpenseTrackerContext);\r\n  const rightTransactions = transactions.filter((t) => t.type === title);\r\n  const total = rightTransactions.reduce((acc, currVal) => acc += currVal.amount, 0);\r\n  const categories = title === 'Income' ? incomeCategorieslocalData : expenseCategorieslocalData;\r\n\r\n  rightTransactions.forEach((t) => {\r\n    const category = categories.find((c) => c.type === t.category);\r\n\r\n    if (category) category.amount += t.amount;\r\n  });\r\n\r\n  const filteredCategories = categories.filter((sc) => sc.amount > 0);\r\n\r\n  const chartData = {\r\n    datasets: [{\r\n      data: filteredCategories.map((c) => c.amount),\r\n      backgroundColor: filteredCategories.map((c) => c.color),\r\n    }],\r\n    labels: filteredCategories.map((c) => c.type),\r\n  };\r\n\r\n  return { filteredCategories, total, chartData };\r\n};\r\n\r\nexport default useTransactions;\r\n","import React from \"react\";\r\nimport { Card, CardHeader, CardContent, Typography } from \"@material-ui/core\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\n\r\nimport useStyles from \"./styles\";\r\nimport useTransactions from \"../../useTransactions\";\r\n\r\nconst DetailsCard = ({ title, subheader }) => {\r\n  const { total, chartData } = useTransactions(title);\r\n  const classes = useStyles();\r\n\r\n  const dataInfo = [];\r\n\r\n  //chartData.datasets.map((data1) => <div> {data1.data[0]+chartData.labels[0]}</div>);\r\n\r\n  const dataFun =()=>{\r\n    const str = []\r\n    for(let i = 0; i < chartData.labels.length; i++){\r\n      dataInfo.push(chartData.labels[i] + \" = \" + chartData.datasets[0].data[i])\r\n    }\r\n    return dataInfo\r\n  }\r\n\r\n  dataFun()\r\n  return (\r\n    <Card className={title === \"Income\" ? classes.income : classes.expense}>\r\n      <CardHeader title={title} subheader={subheader} />\r\n      <CardContent>\r\n        <Typography variant=\"h5\">${total}</Typography>\r\n        <Doughnut data={chartData} />\r\n        <Typography variant=\"h5\">{dataInfo.map(d => <li key={d.index} style={{fontSize: 18, color: 'black', lineHeight : 1.5, padding: 1 }} > {d} </li>)}</Typography>\r\n\r\n    \r\n        {console.log(chartData.labels)}\r\n        {console.log(chartData.datasets)}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default DetailsCard;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  cartContent: {\r\n    paddingTop: 0,\r\n  },\r\n  divider: {\r\n    margin: '20px 0',\r\n  },\r\n}));\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n","import React from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nimport useStyles from './styles';\r\n\r\nconst CustomizedSnackbar = ({ open, setOpen }) => {\r\n  const classes = useStyles();\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Snackbar \r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }} \r\n      open={open} autoHideDuration={6000} onClose={handleClose}>\r\n        <MuiAlert onClose={handleClose} severity=\"success\" elevation={6} variant=\"filled\">Transaction successfully created.</MuiAlert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomizedSnackbar;\r\n","export default (date) => {\r\n  const d = new Date(date);\r\n  let month = `${d.getMonth() + 1}`;\r\n  let day = `${d.getDate()}`;\r\n  const year = d.getFullYear();\r\n\r\n  if (month.length < 2) { month = `0${month}`; }\r\n  if (day.length < 2) { day = `0${day}`; }\r\n\r\n  return [year, month, day].join('-');\r\n};\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles(() => ({\r\n  radioGroup: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    marginBottom: '-10px',\r\n  },\r\n  button: {\r\n    marginTop: '20px',\r\n  },\r\n  buttonAdd: {\r\n    marginTop: '2px',\r\n  },\r\n}));\r\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport { TextField, Typography, Grid, Button, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport { useSpeechContext } from '@speechly/react-client';\r\nimport Snackbar from '../../Snackbar/Snackbar';\r\nimport formatDate from '../../../utils/formatDate';\r\nimport { ExpenseTrackerContext } from '../../../context/context';\r\nimport { incomeCategories, expenseCategories } from '../../../constants/categories';\r\nimport useStyles from './styles';\r\n\r\n\r\nconst incomeColors = ['#123123', '#154731', '#165f40', '#16784f', '#14915f', '#10ac6e', '#0bc77e', '#04e38d', '#00ff9d'];\r\nconst expenseColors = ['#b50d12', '#bf2f1f', '#c9452c', '#d3583a', '#dc6a48', '#e57c58', '#ee8d68', '#f79d79', '#ffae8a', '#cc474b', '#f55b5f'];\r\nconst addCatName = \"\";\r\n\r\n\r\n//const incomeCategorieslocalData =  JSON.parse(window.localStorage.getItem('incomeCategorieslocal'));\r\nconst incomeCategorieslocalData =  JSON.parse(window.localStorage.getItem('incomeCategorieslocal')) === null ? incomeCategories : JSON.parse(window.localStorage.getItem('incomeCategorieslocal'));\r\n// const incomeCategorieslocalData =  JSON.parse(window.localStorage.getItem('incomeCategorieslocal')) === null ? incomeCategories : JSON.parse(window.localStorage.getItem('incomeCategorieslocal'));\r\nconst expenseCategorieslocalData =  JSON.parse(window.localStorage.getItem('expenseCategorieslocal')) === null ? expenseCategories : JSON.parse(window.localStorage.getItem('expenseCategorieslocal'));\r\n//const expenseCategorieslocalData =  JSON.parse(window.localStorage.getItem('expenseCategorieslocal'));\r\nconsole.log(incomeCategorieslocalData)\r\nconst initialState = {\r\n  amount: '',\r\n  category: '',\r\n  type: 'Income',\r\n  date: formatDate(new Date()),\r\n};\r\n\r\n\r\nconst NewTransactionForm = () => {\r\n\r\n useEffect(() => {\r\n //  incomeCategorieslocalData =  JSON.parse(window.localStorage.getItem('incomeCategorieslocal')) === null ? incomeCategories : JSON.parse(window.localStorage.getItem('incomeCategorieslocal'));\r\n  // const incomeCategorieslocalData =  JSON.parse(window.localStorage.getItem('incomeCategorieslocal')) === null ? incomeCategories : JSON.parse(window.localStorage.getItem('incomeCategorieslocal'));\r\n //  expenseCategorieslocalData =  JSON.parse(window.localStorage.getItem('expenseCategorieslocal')) === null ? expenseCategories : JSON.parse(window.localStorage.getItem('expenseCategorieslocal'));\r\n\r\n},[incomeCategorieslocalData,expenseCategorieslocalData])\r\n\r\n  const classes = useStyles();\r\n  const { addTransaction } = useContext(ExpenseTrackerContext);\r\n  const [formData, setFormData] = useState(initialState);\r\n  const [addCatName, setAddCatName] = useState(\"\");\r\n  const { segment } = useSpeechContext();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const createTransaction = () => {\r\n    if (Number.isNaN(Number(formData.amount)) || !formData.date.includes('-')) return;\r\n\r\n    if (incomeCategorieslocalData.map((iC) => iC.type).includes(formData.category)) {\r\n      setFormData({ ...formData, type: 'Income' });\r\n    } else if (expenseCategorieslocalData.map((iC) => iC.type).includes(formData.category)) {\r\n      setFormData({ ...formData, type: 'Expense' });\r\n    }\r\n\r\n    setOpen(true);\r\n    addTransaction({ ...formData, amount: Number(formData.amount), id: uuidv4() });\r\n    setFormData(initialState);\r\n  };\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (segment) {\r\n      if (segment.intent.intent === 'add_expense') {\r\n        setFormData({ ...formData, type: 'Expense' });\r\n      } else if (segment.intent.intent === 'add_income') {\r\n        setFormData({ ...formData, type: 'Income' });\r\n      } else if (segment.isFinal && segment.intent.intent === 'create_transaction') {\r\n        return createTransaction();\r\n      } else if (segment.isFinal && segment.intent.intent === 'cancel_transaction') {\r\n        return setFormData(initialState);\r\n      }\r\n\r\n      segment.entities.forEach((s) => {\r\n        const category = `${s.value.charAt(0)}${s.value.slice(1).toLowerCase()}`;\r\n\r\n        switch (s.type) {\r\n          case 'amount':\r\n            setFormData({ ...formData, amount: s.value });\r\n            break;\r\n          case 'category':\r\n            if (incomeCategorieslocalData.map((iC) => iC.type).includes(category)) {\r\n              setFormData({ ...formData, type: 'Income', category });\r\n            } else if (expenseCategorieslocalData.map((iC) => iC.type).includes(category)) {\r\n              setFormData({ ...formData, type: 'Expense', category });\r\n            }\r\n            break;\r\n          case 'date':\r\n            setFormData({ ...formData, date: s.value });\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n\r\n      if (segment.isFinal && formData.amount && formData.category && formData.type && formData.date) {\r\n        createTransaction();\r\n      }\r\n    }\r\n  }, [segment]);\r\n\r\n\r\n\r\n  const selectedCategories = formData.type === 'Income' ? incomeCategorieslocalData : expenseCategorieslocalData;\r\n\r\n  const addCategories =() =>{\r\n    // window.localStorage.setItem('incomeCategorieslocal', JSON.stringify(incomeCategories));\r\n    // window.localStorage.setItem('expenseCategorieslocal', JSON.stringify(expenseCategories));\r\n    // incomeCategories.push({ type: addCatName.addCatName, amount: 0, color: incomeColors[0] },)\r\n    formData.type === 'Income' ?    window.localStorage.setItem('incomeCategorieslocal', JSON.stringify([...incomeCategorieslocalData,  { type: `${addCatName}`, amount: 0, color: incomeColors[Math.floor(Math.random() * (7 - 0))] },]))\r\n     :    window.localStorage.setItem('expenseCategorieslocal', JSON.stringify([...expenseCategorieslocalData,  { type: `${addCatName}`, amount: 0, color: expenseColors[Math.floor(Math.random() * (7 - 0))] },]));\r\n  \r\n\r\n     window.location.reload();\r\n  }\r\n\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Snackbar open={open} setOpen={setOpen} />\r\n      <Grid item xs={12}>\r\n        <Typography align=\"center\" variant=\"subtitle2\" gutterBottom>\r\n        {segment ? (\r\n        <div className=\"segment\">\r\n          {segment.words.map((w) => w.value).join(\" \")}\r\n        </div>\r\n      ) : null}\r\n         {/* {isSpeaking ? <BigTranscript /> : 'Start adding transactions'}  */}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>Type</InputLabel>\r\n          <Select value={formData.type} onChange={(e) => setFormData({ ...formData, type: e.target.value })}>\r\n            <MenuItem value=\"Income\">Income</MenuItem>\r\n            <MenuItem value=\"Expense\">Expense</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>Category</InputLabel>\r\n          <Select value={formData.category} onChange={(e) => setFormData({ ...formData, category: e.target.value })}>\r\n            {selectedCategories.map((c) => <MenuItem key={c.type} value={c.type}>{c.type}</MenuItem>)}\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n\r\n      <Grid item xs={6}>\r\n        <TextField type=\"number\" label=\"Amount\" value={formData.amount} onChange={(e) => setFormData({ ...formData, amount: e.target.value })} fullWidth />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField fullWidth label=\"Date\" type=\"date\" value={formData.date} onChange={(e) => setFormData({ ...formData, date: formatDate(e.target.value) })} />\r\n      </Grid>\r\n      \r\n      <Button className={classes.button} variant=\"outlined\" color=\"primary\" fullWidth onClick={createTransaction}>Create</Button>\r\n\r\n\r\n      <Grid item xs={6}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>Type</InputLabel>\r\n          <Select value={formData.type} onChange={(e) => setFormData({ ...formData, type: e.target.value })}>\r\n            <MenuItem value=\"Income\">Income</MenuItem>\r\n            <MenuItem value=\"Expense\">Expense</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n\r\n      <Grid item xs={6}>\r\n      \r\n      {/* <TextField type=\"text\" label=\"Name Of Category\" value={formData.amount} onChange={(e) => setFormData({ ...formData, amount: e.target.value })} fullWidth /> */}\r\n        <TextField type=\"text\" label=\"Category Name\"  onChange={(e) => setAddCatName(e.target.value)} fullWidth />\r\n      </Grid>\r\n\r\n      {/* <Grid item xs={6}>\r\n      <InputLabel>Pick Color</InputLabel>\r\n          <Select value={formData.category} onChange={(e) => setFormData({ ...formData, category: e.target.value })}>\r\n            {selectedCategories.map((c) => <MenuItem style={{fontSize: 18, color: `${c.color}`,  padding: 1 }} key={c.color} value={c.color}>{c.color}</MenuItem>)}\r\n          </Select>\r\n      </Grid> */}\r\n      \r\n  \r\n      <Button className={classes.buttonAdd} variant=\"outlined\" color=\"primary\" fullWidth onClick={addCategories}>Add Categore</Button>\r\n\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default NewTransactionForm;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport { red, green } from '@material-ui/core/colors';\r\n\r\nexport default makeStyles((theme) => ({\r\n  avatarIncome: {\r\n    color: '#fff',\r\n    backgroundColor: green[500],\r\n  },\r\n  avatarExpense: {\r\n    color: theme.palette.getContrastText(red[500]),\r\n    backgroundColor: red[500],\r\n  },\r\n  list: {\r\n    maxHeight: 'auto',\r\n    overflow: 'auto',\r\n  },\r\n}));\r\n","import React, { useContext } from 'react';\r\nimport { List as MUIList, ListItem, ListItemAvatar, Avatar, ListItemText, ListItemSecondaryAction, IconButton, Slide } from '@material-ui/core';\r\nimport { Delete, MoneyOff } from '@material-ui/icons';\r\n\r\nimport { ExpenseTrackerContext } from '../../../context/context';\r\nimport useStyles from './styles';\r\n\r\nconst deleteCategories = () => {\r\n\r\n  localStorage.removeItem(\"incomeCategorieslocal\");\r\n  localStorage.removeItem(\"expenseCategorieslocal\");\r\n  console.log(\" cate deleted called\")\r\n  window.location.reload(true);\r\n}\r\n\r\n\r\nconst List = () => {\r\n  const classes = useStyles();\r\n  const { transactions, deleteTransaction, deleteAllTransaction} = useContext(ExpenseTrackerContext);\r\n\r\n  return (\r\n    <MUIList dense={false} className={classes.list}>\r\n      {transactions.map((transaction) => (\r\n        <Slide direction=\"down\" in mountOnEnter unmountOnExit key={transaction.id}>\r\n          <ListItem >\r\n            <ListItemAvatar>\r\n              <Avatar className={transaction.type === 'Income' ? classes.avatarIncome : classes.avatarExpense}>\r\n                <MoneyOff />\r\n              </Avatar>\r\n            </ListItemAvatar>\r\n            <ListItemText primary={transaction.category} secondary={`$${transaction.amount} - ${transaction.date}`} />\r\n            <ListItemSecondaryAction>\r\n              <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => deleteTransaction(transaction.id)}>\r\n                <Delete />\r\n              </IconButton>\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n        </Slide>\r\n      ))}\r\n      <p style={{fontSize: 18, color: 'red',  padding: 1, border: \"1px solid red\" }}>DELETE_ALL_TRANSACTION<IconButton edge=\"end\" aria-label=\"delete All\" onClick={() => deleteAllTransaction()}>\r\n                <Delete />\r\n              </IconButton></p>\r\n    \r\n              <p style={{fontSize: 18, color: 'red',  padding: 1 , border: \"1px solid red\" }}>DELETE_Categories <IconButton edge=\"end\" aria-label=\"delete All\" onClick={() => deleteCategories()}>\r\n                <Delete />\r\n              </IconButton></p>\r\n      \r\n\r\n\r\n    </MUIList>\r\n    \r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React from 'react';\r\n\r\nconst isIncome = Math.round(Math.random());\r\n\r\nconst InfoCard = () => {\r\n  return (\r\n    <div elevation={3} style={{ textAlign: 'center', padding: '0 10%' }}>\r\n\r\n      {/* Try saying: <br /> \r\n      Add {isIncome ? 'Income ' : 'Expense '} \r\n      for {isIncome ? '$100 ' : '$50 '}  \r\n      in Category {isIncome ? 'Salary ' : 'Travel '}\r\n      for {isIncome ? 'Monday ' : 'Thursday '} */}\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InfoCard;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { Card, CardHeader, CardContent, Typography, Grid, Divider } from '@material-ui/core';\r\nimport { useSpeechContext } from '@speechly/react-client';\r\nimport { ExpenseTrackerContext } from '../../context/context';\r\nimport useStyles from './styles';\r\nimport Form from './Form/Form';\r\nimport List from './List/List';\r\nimport InfoCard from '../InfoCard';\r\n\r\n\r\nconst ExpenseTracker = () => {\r\n  const classes = useStyles();\r\n  const { balance } = useContext(ExpenseTrackerContext);\r\n\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader title=\"Finance Tracker\" subheader=\"For Personal Use\" />\r\n      <CardContent>\r\n        <Typography align=\"center\" variant=\"h5\">Total Balance ${balance}</Typography>\r\n        <Typography variant=\"subtitle1\" style={{ lineHeight: '1.5em', marginTop: '20px' }}>\r\n          <InfoCard />\r\n        </Typography>\r\n        <Divider className={classes.divider} />\r\n        <Form />\r\n      </CardContent>\r\n      <CardContent   className={classes.cartContent}>\r\n        <Grid container spacing={2}>\r\n          <Grid  item xs={12}>\r\n            <List  />\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n    \r\n  );\r\n};\r\n\r\nexport default ExpenseTracker;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  desktop: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  mobile: {\r\n    [theme.breakpoints.down('sm')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  main: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      paddingBottom: '5%',\r\n    },\r\n  },\r\n  last: {\r\n    [theme.breakpoints.down('sm')]: {\r\n      marginBottom: theme.spacing(3),\r\n      paddingBottom: '200px',\r\n    },\r\n  },\r\n  grid: {\r\n    '& > *': {\r\n      margin: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n","import React, { useEffect, useRef,useState } from 'react';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nimport { SpeechState, useSpeechContext } from \"@speechly/react-client\";\r\nimport { PushToTalkButton, PushToTalkButtonContainer } from '@speechly/react-ui';\r\n\r\nimport { Details, Main } from './components';\r\nimport useStyles from './styles';\r\nimport formatDate from './utils/formatDate';\r\n\r\n\r\nimport Pdf from \"react-to-pdf\";\r\n\r\nconst reff = React.createRef();\r\n\r\nvar x =15;\r\nvar y =15;\r\n\r\nconst App = () => {\r\n  const classes = useStyles();\r\n  const { speechState } = useSpeechContext();\r\n  const main = useRef(null)\r\n  const date = formatDate(new Date())\r\n\r\n  const executeScroll = () => main.current.scrollIntoView()    \r\n  const [pdfSizeX, setPdfSizeX] = useState(0)\r\n  const [pdfSizeY, setPdfSizeY] = useState(0)\r\n\r\n  var win = window,\r\n    doc = document,\r\n    docElem = doc.documentElement,\r\n    body = doc.getElementsByTagName('body')[0],\r\n    x =   docElem.clientWidth // || body.clientWidth,\r\n    y = win.innerHeight  //|| docElem.clientHeight|| body.clientHeight;\r\n    const options = {\r\n\r\n    orientation: 'portrait',\r\n    unit: 'in',\r\n    format: [Math.floor(document.body.scrollWidth / 50),Math.floor(document.body.scrollHeight / 40)]\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (speechState === SpeechState.Recording) {\r\n      executeScroll();\r\n    }\r\n  }, [speechState]);\r\n\r\n  return (\r\n    <>\r\n    <div style={{width: \"auto\", height: \"auto\", background: 'blue'}} ref={reff} >\r\n      <Grid  className={classes.grid} container spacing={0} alignItems=\"center\" justifyContent=\"center\">\r\n        <Grid  item xs={12} sm={4} className={classes.mobile}>\r\n          <Details title=\"Income\" />\r\n        </Grid>\r\n        <Grid ref={main} item xs={12} sm={3} className={classes.main}  >\r\n          <Main />\r\n        </Grid>\r\n        <Grid item xs={12} sm={4} className={classes.desktop} >\r\n          <Details title=\"Income\"   />\r\n        </Grid>\r\n        <Grid item xs={12} sm={4} className={classes.last}  >\r\n          <Details title=\"Expense\" />\r\n        </Grid>\r\n        {/* <PushToTalkButtonContainer>\r\n          <PushToTalkButton />\r\n        </PushToTalkButtonContainer> \r\n        {options.format = [x/15,y/15]}\r\n         */}\r\n        <Pdf targetRef={reff} filename= {date +'PDF.pdf'} options={options} x={0.5} y={0.5} scale={1}>\r\n          {({ toPdf }) => <button style={{fontSize: 18, color: 'grey',  padding: 1 }} onClick={toPdf}>Generate Pdf File</button>}\r\n         </Pdf>\r\n      </Grid>\r\n    </div>\r\n      \r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { SpeechProvider } from '@speechly/react-client';\r\n\r\nimport { Provider } from './context/context';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <SpeechProvider appId=\"7c4aee08-1073-4a32-b862-ebe1850e0732\" language=\"en-US\">\r\n    <Provider>\r\n      <App />\r\n    </Provider>\r\n  </SpeechProvider>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}